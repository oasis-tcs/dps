{
  "$schema": "https://docs.oasis-open.org/dps/meta/v1.0/schema/data-provenance-configuration.json",
  "$id": "https://docs.oasis-open.org/dps/meta/v1.0/schema/data-provenance.json",
  "title": "Data Provenance Metadata Schema v1.0",
  "description": "The Data Provenance metadata schema is made up of four groups of metadata elements: Set, Source, Provenance, and Use.",
  "$comment": "Note, that we use a configuration schema to enforce validation of format specifiers. Content changes are pretty much work in progress.",
  "type": "object",
  "required": [
    "$schema",
    "set",
    "source",
    "provenance",
    "use"
  ],
  "properties": {
    "set": {
      "title": "Set level meta-data",
      "description": "Captures the meta-data about this meta-data set describing a particular data-set.",
      "type": "object",
      "required": [
        "category",
        "schema-version",
        "publisher",
        "title",
        "tracking"
      ],
      "properties": {
        "acknowledgments": {
          "title": "Set acknowledgments",
          "description": "Contains a list of acknowledgment elements associated with the whole set.",
          "$ref": "#/$defs/acknowledgments-type"
        },
        "category": {
          "title": "Set category",
          "description": "Defines a short canonical name, chosen by the set producer, which will inform the end user as to the category of the meta-data set.",
          "type": "string",
          "pattern": "^[^\\s\\-_\\.](.*[^\\s\\-_\\.])?$",
          "minLength": 1,
          "examples": [
            "dp_base",
            "dp_event_source",
            "dp_profile_xyz",
            "Example Data Protection Notice Exemption"
          ]
        },
        "language": {
          "title": "Document language",
          "description": "Identifies the language used by this document, corresponding to IETF BCP 47 / RFC 5646.",
          "$ref": "#/$defs/language-type"
        },
        "schema-version": {
          "title": "Data Provenance Core version",
          "description": "Gives the version of the Data Provenance Core specification which the document was generated for.",
          "type": "string",
          "enum": [
            "1.0"
          ]
        },
        "set-title": {
          "title": "Title of this meta-data set",
          "description": "This SHOULD be a canonical name for the set, and sufficiently unique to distinguish it from similar sets.",
          "type": "string",
          "minLength": 1,
          "examples": [
            "Learning Set for Regression Modelling for Stats 101",
            "Example Data Protection Dataset in Example Generator"
          ]
        },
        "source-language": {
          "title": "Source language",
          "description": "If this copy of the document is a translation then the value of this property describes from which language this document was translated.",
          "$ref": "#/$defs/language-type"
        },
        "tracking": {
          "title": "Tracking",
          "description": "Is a container designated to hold all management attributes necessary to track a CSAF document as a whole.",
          "type": "object",
          "required": [
            "current-release-date",
            "id",
            "initial-release-date",
            "revision-history",
            "status",
            "version"
          ],
          "properties": {
            "aliases": {
              "title": "Aliases",
              "description": "Contains a list of alternate names for the same set.",
              "type": "array",
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "title": "Alternate name",
                "description": "Specifies a non-empty string that represents a distinct optional alternative ID used to refer to the set.",
                "type": "string",
                "minLength": 1,
                "examples": [
                  "0bacba95-ceb9-4fae-bf07-d5683a9481c1"
                ]
              }
            },
            "current-release-date": {
              "title": "Current release date",
              "description": "The date when the current revision of this document was released",
              "type": "string",
              "format": "date-time"
            },
            "generator": {
              "title": "Set generator",
              "description": "Is a container to hold all elements related to the generation of the metadata set. These items will reference when the document was actually created, including the date it was generated and the entity that generated it.",
              "type": "object",
              "required": [
                "engine"
              ],
              "properties": {
                "date": {
                  "title": "Date of set generation",
                  "description": "This SHOULD be the current date that the set was generated. Because documents are often generated internally by a set producer and exist for a nonzero amount of time before being released, this field MAY be different from the Initial Release Date and Current Release Date.",
                  "type": "string",
                  "format": "date-time"
                },
                "engine": {
                  "title": "Engine of document generation",
                  "description": "Contains information about the engine that generated the DP-Core set.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "title": "Engine name",
                      "description": "Represents the name of the engine that generated the DP-Core set.",
                      "type": "string",
                      "minLength": 1,
                      "examples": [
                        "Cisco Data Protector",
                        "DPCoreX",
                        "ExtractorDP"
                      ]
                    },
                    "version": {
                      "title": "Engine version",
                      "description": "Contains the version of the engine that generated the DP-Core set.",
                      "$ref": "#/$defs/version-type",
                      "examples": [
                        "0.42.0",
                        "1.0.0-beta+exp.sha.a1c44f85",
                        "2"
                      ]
                    }
                  }
                }
              }
            },
            "id": {
              "title": "Unique identifier for the metadata set",
              "description": "The ID is a simple label that provides for a wide range of numbering values, types, and schemes. Its value SHOULD be assigned and maintained by the original metadata set issuing authority.",
              "type": "string",
              "pattern": "^[\\S](.*[\\S])?$",
              "minLength": 1,
              "examples": [
                "7aedeb0a-22dd-428a-ab76-c950b43cbbc6",
                "abcdef-orga-ds-0815",
                "cisco-sa-20190513-secureboot"
              ]
            },
            "initial-release-date": {
              "title": "Initial release date",
              "description": "The date when this set was first published.",
              "type": "string",
              "format": "date-time"
            },
            "revision-history": {
              "title": "Revision history",
              "description": "Holds one revision item for each version of the DP-Core set, including the initial one.",
              "type": "array",
              "minItems": 1,
              "items": {
                "title": "Revision",
                "description": "Contains all the information elements required to track the evolution of a DP-Core set.",
                "type": "object",
                "required": [
                  "date",
                  "number",
                  "summary"
                ],
                "properties": {
                  "date": {
                    "title": "Date of the revision",
                    "description": "The date of the revision entry",
                    "type": "string",
                    "format": "date-time"
                  },
                  "legacy-version": {
                    "title": "Legacy version of the revision",
                    "description": "Contains the version string used in an existing set with the same content. This optional field is intended to trace between DP-Core compliant to historic, DP-Core unaware data provenance information items.",
                    "type": "string",
                    "minLength": 1
                  },
                  "number": {
                    "$ref": "#/$defs/version-type"
                  },
                  "summary": {
                    "title": "Summary of the revision",
                    "description": "Holds a single non-empty string representing a short description of the changes.",
                    "type": "string",
                    "minLength": 1,
                    "examples": [
                      "Initial version."
                    ]
                  }
                }
              }
            },
            "status": {
              "title": "Set status",
              "description": "Defines the draft status of the set. This allows processing DP-Core sets of various maturity per version.",
              "type": "string",
              "enum": [
                "draft",
                "final",
                "interim"
              ]
            },
            "version": {
              "title": "Set version",
              "description": "The version of the current DP-Core set",
              "$ref": "#/$defs/version-type"
            }
          }
        }
      }
    },
    "source": {
      "$ref": "#/$defs/source-type"
    },
    "provenance": {
      "$ref": "#/$defs/provenance-type"
    },
    "use": {
      "$ref": "#/$defs/use-type"
    }
  },
  "$defs": {
    "about-type": {
      "$comment": "WIP, because producers may only provied opaue text for all three dimensions as per legal reasons.",
      "description": "Contains a detailed narrative that explains the contents, scope, and purpose of the dataset. It provides essential contextual information that helps users understand what the data represents, how it was collected, and any limitations or recommended uses.",
      "properties": {
        "content": {
          "description": "Provides essential contextual information that helps users understand what the data represents and how it was collected.",
          "type": "string",
          "minLength": 1,
          "examples": [
            "We found these numbers on the parking lot."
          ]
        },
        "purpose": {
          "description": "Explains the recommended uses.",
          "type": "string",
          "minLength": 1,
          "examples": [
            "Use only for learning regression modeling. Not for production use."
          ]
        },
        "scope": {
          "description": "Points out any limitations.",
          "type": "string",
          "minLength": 1,
          "examples": [
            "We did not verify anything. Use at your own risk."
          ],
          "$comment": "Not sure if this property should be optional."
        }
      },
      "required": [
        "content",
        "purpose"
      ],
      "type": "object"
    },
    "acknowledgments-type": {
      "title": "List of acknowledgments",
      "description": "Contains a list of acknowledgment elements.",
      "type": "array",
      "minItems": 1,
      "items": {
        "title": "Acknowledgment",
        "description": "Acknowledges contributions by describing those that contributed.",
        "type": "object",
        "minProperties": 1,
        "properties": {
          "names": {
            "title": "List of acknowledged names",
            "description": "Contains the names of contributors being recognized.",
            "type": "array",
            "minItems": 1,
            "items": {
              "title": "Name of the contributor",
              "description": "Contains the name of a single contributor being recognized.",
              "type": "string",
              "minLength": 1,
              "examples": [
                "A. Big Data",
                "Manolo Servicio"
              ]
            }
          },
          "organization": {
            "title": "Contributing organization",
            "description": "Contains the name of a contributing organization being recognized.",
            "type": "string",
            "minLength": 1,
            "examples": [
              "Cisco",
              "ETH Zurich",
              "IBM",
              "Microsoft"
            ]
          },
          "summary": {
            "title": "Summary of the acknowledgment",
            "description": "SHOULD represent any contextual details the set producers wish to make known about the acknowledgment or acknowledged parties.",
            "type": "string",
            "minLength": 1,
            "examples": [
              "First analysis of the merged data-set"
            ]
          },
          "urls": {
            "title": "List of URLs",
            "description": "Specifies a list of URLs or location of the reference to be acknowledged.",
            "type": "array",
            "minItems": 1,
            "items": {
              "title": "URL of acknowledgment",
              "description": "Contains the URL or location of the reference to be acknowledged.",
              "type": "string",
              "format": "uri"
            }
          }
        }
      }
    },
    "address-type": {
      "description": "Single physical address as lines of text.",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "type": "string",
        "minLength": 1
      }
    },
    "geographic-regions-type": {
      "$comment": "Refactored from four processing/storage (dis-)allowed occurences; enforecd at least one item if present and still has countrsy as string (WIP).",
      "description": "Defines the geographical boundaries within which some action given by the key is specified by the semantics of the key as name.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        },
        "required": [
          "country"
        ]
      },
      "minItems": 1,
      "uniqueItems": true
    },
    "identity-type": {
      "title": "Identify as precisely as possible offeing various methods",
      "description": "Provides at least one method which aids in identifying some entity.",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "hashes": {
          "title": "List of hashes",
          "description": "Contains a list of cryptographic hashes usable to identify files or filesets.",
          "type": "array",
          "minItems": 1,
          "items": {
            "title": "Cryptographic hashes",
            "description": "Contains all information to identify a file or fileset based on its cryptographic hash values.",
            "type": "object",
            "required": [
              "tree-hashes",
              "path"
            ],
            "properties": {
              "tree-hashes": {
                "title": "List of file or tree hashes",
                "description": "Contains a list of cryptographic hashes for this file or tree.",
                "type": "array",
                "minItems": 1,
                "items": {
                  "title": "Path hash",
                  "description": "Contains one hash value and algorithm of the file to be identified.",
                  "type": "object",
                  "required": [
                    "algorithm",
                    "value"
                  ],
                  "properties": {
                    "algorithm": {
                      "title": "Algorithm of the cryptographic hash",
                      "description": "Contains the name of the hash or tree/seal algorithm used to calculate the value.",
                      "type": "string",
                      "default": "sha256",
                      "minLength": 1,
                      "examples": [
                        "blake2b512",
                        "sha256",
                        "sha3-512",
                        "sha384",
                        "sha512",
                        "tree-blake3-seal-sha512"
                      ]
                    },
                    "value": {
                      "title": "Value of the cryptographic hash",
                      "description": "Contains the cryptographic hash value in hexadecimal representation.",
                      "type": "string",
                      "pattern": "^[0-9a-fA-F]{32,}$",
                      "minLength": 32,
                      "examples": [
                        "af1349b9f5f9a1a6a0404dea36dcc9499bcb25c9adc112b7cc9a93cae41f3262",
                        "cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e",
                        "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
                      ]
                    }
                  }
                }
              },
              "path": {
                "title": "Path",
                "description": "Contains the path (can be a single file or the root of a filesystem tree) which is identified by the hash values.",
                "type": "string",
                "minLength": 1,
                "examples": [
                  "/data/set/42",
                  "example-data.tar.xz",
                  "household-data.dmg"
                ]
              }
            }
          }
        },
        "uris": {
          "title": "List of generic URIs",
          "description": "Contains a list of identifiers in URI format.",
          "type": "array",
          "minItems": 1,
          "items": {
            "title": "URI",
            "description": "Provides an identifier in URI format.",
            "type": "string",
            "format": "uri"
          }
        },
        "uuids": {
          "title": "List of UUIDs",
          "description": "Contains a list of identifiers in UUID format.",
          "type": "array",
          "minItems": 1,
          "items": {
            "title": "UUID",
            "description": "Provides a unique ID.",
            "type": "string",
            "format": "uuid"
          }
        },
        "custom-ids": {
          "title": "List of text form identifiers",
          "description": "Contains a list of identifiers in any text format.",
          "type": "array",
          "minItems": 1,
          "items": {
            "title": "custom-id",
            "description": "Provides a unique ID in any text format.",
            "type": "object",
            "required": [
              "method",
              "value"
            ],
            "properties": {
              "method": {
                "title": "Method for construction of the ID",
                "description": "Contains the name of the method used to derive the value.",
                "type": "string",
                "minLength": 1,
                "examples": [
                  "part-number",
                  "sampling-sequencer"
                ]
              },
              "tool": {
                "title": "Tool used for construction of the ID",
                "description": "Contains the name of the tool used to derive the value.",
                "type": "string",
                "minLength": 1,
                "examples": [
                  "blowdown",
                  "treehash"
                ]
              },
              "parameter-list": {
                "title": "List of parameters used for the tool",
                "description": "Contains a list of parameters to use when calling the tool.",
                "type": "array",
                "minItems": 1,
                "items": {
                  "title": "paraemter",
                  "description": "A parameter as part of the tool invocation.",
                  "type": "string",
                  "minLength": 1,
                  "examples": [
                    "--algo",
                    "blake3",
                    "--seal",
                    "sha512"
                  ]
                },
                "examples": [
                  [
                    "--algo",
                    "blake3",
                    "--seal",
                    "sha512"
                  ],
                  [
                    "--strict",
                    "true"
                  ]
                ]
              },
              "value": {
                "title": "Value of the custom identifier",
                "description": "Contains the custom identifier value.",
                "type": "string",
                "minLength": 1,
                "examples": [
                  "42",
                  "942-1234",
                  "afacade"
                ]
              }
            }
          }
        }
      }
    },
    "language-type": {
      "title": "Language type",
      "description": "Identifies a language, corresponding to IETF BCP 47 / RFC 5646. See IETF language registry: https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry",
      "type": "string",
      "pattern": "^(([A-Za-z]{2,3}(-[A-Za-z]{3}(-[A-Za-z]{3}){0,2})?|[A-Za-z]{4,8})(-[A-Za-z]{4})?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-[A-WY-Za-wy-z0-9](-[A-Za-z0-9]{2,8})+)*(-[Xx](-[A-Za-z0-9]{1,8})+)?|[Xx](-[A-Za-z0-9]{1,8})+|[Ii]-[Dd][Ee][Ff][Aa][Uu][Ll][Tt]|[Ii]-[Mm][Ii][Nn][Gg][Oo])$",
      "examples": [
        "de",
        "en",
        "fr",
        "frc",
        "jp"
      ]
    },
    "notes-type": {
      "title": "List of notes",
      "description": "Contains notes which are specific to the current context.",
      "type": "array",
      "minItems": 1,
      "items": {
        "title": "Note",
        "description": "Is a place to put all manner of text blobs related to the current context.",
        "type": "object",
        "required": [
          "category",
          "text"
        ],
        "properties": {
          "audience": {
            "title": "Audience of note",
            "description": "Indicates who is intended to read it.",
            "type": "string",
            "minLength": 1,
            "examples": [
              "all",
              "executives",
              "students",
              "customers"
            ]
          },
          "category": {
            "title": "Note category",
            "description": "Contains the information of what kind of note this is.",
            "type": "string",
            "enum": [
              "description",
              "details",
              "faq",
              "general",
              "legal_disclaimer",
              "other",
              "summary"
            ]
          },
          "text": {
            "title": "Note content",
            "description": "Holds the content of the note. Content varies depending on type.",
            "type": "string",
            "minLength": 1
          },
          "title": {
            "title": "Title of note",
            "description": "Provides a concise description of what is contained in the text of the note.",
            "type": "string",
            "minLength": 1,
            "examples": [
              "Details",
              "Executive summary",
              "Findings of Internal Audit 2025-08-31",
              "Technical summary"
            ]
          }
        }
      }
    },
    "orga-type": {
      "$comment": "We may want to reuse existing types for the orga or at least foir address data",
      "description": "An organization responsible with point of contact for inquiries.",
      "minItems": 1,
      "type": "array",
      "items": {
        "properties": {
          "address": "#/$defs/address-type",
          "legal-name": {
            "type": "string",
            "minLength": 1
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "legal-name"
        ],
        "type": "object"
      },
      "uniqueItems": true
    },
    "provenance-type": {
      "description": "This describes the provenance of the dataset.",
      "type": "object",
      "properties": {
        "source": {
          "description": "Identifies where the metadata for any source datasets that contribute to the current dataset can be found, establishing lineage and dependencies. This field establishes lineage.",
          "type": "string"
        },
        "origin": {
          "description": "If the data originates from a different organization than the one who issued the dataset, this field identifies the original source's legal name.",
          "type": "#/$defs/orga-type"
        },
        "origin-geography": {
          "description": "The geographical location where the data was originally collected, which can be important for compliance with regional laws and understanding the data's context.",
          "type": "#/$defs/geographic-regions-type"
        },
        "date": {
          "description": "The date when the dataset was compiled or created, providing a temporal context for the data.",
          "type": "string"
        },
        "previous-date": {
          "description": "The release date of the last version of the dataset, if it has been updated or revised, to track changes and updates over time.",
          "type": "string"
        },
        "generation-period": {
          "description": "The span of time during which the data within the dataset was collected or generated, offering insight into the dataset's timeliness and relevance.",
          "type": "object",
          "properties": {
            "start": {
              "description": "Start date/time",
              "type": "string"
            },
            "end": {
              "description": "End date/time",
              "type": "string"
            }
          }
        },
        "generation-method": {
          "description": "The methodology or procedures used to collect, generate, or compile the data, giving insight into its reliability and validity.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            },
            "required": [
              "code"
            ]
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "format": {
          "$comment": "We should consider making this an enumeration to aid in automation",
          "description": "Describes the nature of the data within the dataset, such as numerical, textual, or multimedia, helping users understand what kind of information is contained within the file or dataset.",
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "sub-provenance": {
          "$ref": "#/$defs/provenance-type"
        }
      },
      "required": [
        "origin-geography",
        "date",
        "generation-method"
      ]
    },
    "source-type": {
      "description": "Characterizes the content and source of the dataset.",
      "properties": {
        "about": {
          "description": "Contains a detailed narrative that explains the contents, scope, and purpose of the dataset. It provides essential contextual information that helps users understand what the data represents, how it was collected, and any limitations or recommended uses.",
          "$ref": "#/$defs/about-type",
          "examples": {
            "content": "Estimates of table length from randomly selected participants",
            "purpose": "Publicly available test dataset for learning linear regression modeling."
          }
        },
        "id": {
          "description": "Unique identifier (such as a UUID) assigned to the dataset's metadata to uniquely distinguish it from others, ensuring no confusion or overlap.",
          "type": "#/$defs/identity-type",
          "examples": [
            {
              "custome-ids": [
                {
                  "method": "registered-path",
                  "value": "/public/ds/42"
                }
              ]
            },
            {
              "uuids": [
                "e5471657-9ede-4335-843b-c1376ef29bfa"
              ]
            },
            {
              "uris": [
                "https://example.com/public/ds/42"
              ]
            }
          ]
        },
        "issuer": {
          "description": "The legal entity responsible for creating the dataset, providing accountability and a point of contact for inquiries.",
          "$ref": "#/$defs/orga-type",
          "examples": [
            {
              "legal-name": "Sampling Ltd.",
              "url": "https://example.com/smplng/about"
            }
          ]
        },
        "location": {
          "description": "The web address where the dataset's metadata is published and can be accessed, providing a direct link to detailed information about the dataset. Typically will be a unique URL of the current dataset.",
          "type": "string"
        },
        "name": {
          "description": "The official name of the dataset, which should be descriptive and help easily identify the dataset's content and purpose.",
          "type": "string"
        },
        "data-version": {
          "description": "Specifies the version of the dataset this DP-Core set describes, allowing the dataset to evolve over time and keeping consistent labeling.",
          "type": "#/$defs/version-type"
        }
      },
      "required": [
        "about",
        "id",
        "issuer",
        "location",
        "name",
        "data-version"
      ],
      "type": "object"
    },
    "references-type": {
      "title": "List of references",
      "description": "Holds a list of references.",
      "type": "array",
      "minItems": 1,
      "items": {
        "title": "Reference",
        "description": "Holds any reference to conferences, papers, advisories, rulings, directives, and other resources that are related and considered related to either a surrounding part of or the entire information item and to be of value to the DP-COre set consumer.",
        "type": "object",
        "required": [
          "summary",
          "url"
        ],
        "properties": {
          "category": {
            "title": "Category of reference",
            "description": "Indicates whether the reference points to the same information item in focus (depending on scope) or to an external resource.",
            "type": "string",
            "default": "external",
            "enum": [
              "external",
              "self"
            ]
          },
          "summary": {
            "title": "Summary of the reference",
            "description": "Indicates what this reference refers to.",
            "type": "string",
            "minLength": 1
          },
          "url": {
            "title": "URL of reference",
            "description": "Provides the URL for the reference.",
            "type": "string",
            "format": "uri"
          }
        }
      }
    },
    "use-type": {
      "description": "This group describes legal use and restrictions.",
      "type": "object",
      "properties": {
        "classification": {
          "description": "Indicate if the dataset includes data falling into the confidentiality classification. Each classifier must be evaluated as true/false/unknown.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "regulation": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "system": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "code"
                ]
              },
              "evaluated": {
                "type": "boolean"
              },
              "tool": {
                "type": "string"
              }
            },
            "required": [
              "regulation",
              "evaluated"
            ]
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "consents": {
          "description": "Specifies where consent documentation or agreements related to the data can be found, ensuring legal compliance and regulatory use. This element must be populated when Privacy Consent is appropriate. When populated it points to either one Privacy Consent Policy that all individuals in the dataset agreed to, or one Privacy Policy for each individual in the dataset with that individual's signature.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "privacy-enhancing": {
          "description": "Indicates whether techniques were used to protect personally identifiable information (PII) or sensitive personal information (SPI), highlighting the dataset's privacy considerations.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "tool-category": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "system": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "code"
                ]
              },
              "tool-used": {
                "type": "string"
              },
              "parameters": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1
              },
              "result": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1
              }
            },
            "required": [
              "tool-used"
            ]
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "processing-included": {
          "description": "Defines the geographical boundaries within which the data can be processed, often for legal or regulatory reasons.",
          "type": "#/$defs/geographic-regions-type"
        },
        "processing-excluded": {
          "description": "Defines the geographical boundaries within which the data cannot be processed, often for legal or regulatory reasons.",
          "type": "#/$defs/geographic-regions-type"
        },
        "storage-allowed": {
          "description": "Specifies where the data may be stored, crucial for compliance with data sovereignty laws.",
          "type": "#/$defs/geographic-regions-type"
        },
        "storage-forbidden": {
          "description": "Specifies where the data may not be stored, crucial for compliance with data sovereignty laws.",
          "type": "#/$defs/geographic-regions-type"
        },
        "license": {
          "description": "Details the location or point of contact for identifying the terms under which the dataset can be used, including any restrictions or obligations, clarifying legal use and distribution rights. License may be an End User License Agreement (EULA), subject to Data Use Agreement (DUA).",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "intended-purpose": {
          "description": "Describes the purpose for which the dataset was created, guiding users on its intended use and potential applications against identified use cases. List all that apply from the Data Use codes that apply. Additional codes can be included with descriptions.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            },
            "required": [
              "code",
              "description"
            ]
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "copyright": {
          "description": "Indicates whether the dataset contains proprietary information that is covered with a Copyright and the terms of said Copyright.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "patent": {
          "description": "Indicates whether the dataset contains proprietary information that is covered with a Patent and said Patent number.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "trademark": {
          "description": "Indicates whether the dataset contains proprietary information that is covered with a Trademark, and the terms of said Trademark.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "uniqueItems": true
        }
      },
      "required": [
        "intended-purpose"
      ]
    },
    "version-type": {
      "title": "Version",
      "description": "Specifies a version string to denote clearly the evolution of the content of the document. Format must be either integer or semantic versioning.",
      "type": "string",
      "pattern": "^(0|[1-9][0-9]*)$|^((0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?)$",
      "examples": [
        "1",
        "4",
        "0.9.0",
        "1.4.3",
        "2.40.0+21AF26D3",
        "2025.7.31"
      ]
    }
  }
}