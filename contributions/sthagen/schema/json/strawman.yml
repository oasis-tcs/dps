$comment: Work in progress
$defs:
  about-type:
    $comment: WIP, because producers may only provied opaue text for all three dimensions
      as per legal reasons.
    description: Contains a detailed narrative that explains the contents, scope,
      and purpose of the dataset. It provides essential contextual information that
      helps users understand what the data represents, how it was collected, and any
      limitations or recommended uses.
    properties:
      content:
        description: Provides essential contextual information that helps users understand
          what the data represents and how it was collected.
        examples: [We found these numbers on the parking lot.]
        minLength: 1
        type: string
      purpose:
        description: Explains the recommended uses.
        examples: [Use only for learning regression modeling. Not for production use.]
        minLength: 1
        type: string
      scope:
        $comment: Not sure if this property should be optional.
        description: Points out any limitations.
        examples: [We did not verify anything. Use at your own risk.]
        minLength: 1
        type: string
    required: [content, purpose]
    type: object
  acknowledgments-type:
    description: Contains a list of acknowledgment elements.
    items:
      description: Acknowledges contributions by describing those that contributed.
      minProperties: 1
      properties:
        names:
          description: Contains the names of contributors being recognized.
          items:
            description: Contains the name of a single contributor being recognized.
            examples: [A. Big Data, Manolo Servicio]
            minLength: 1
            title: Name of the contributor
            type: string
          minItems: 1
          title: List of acknowledged names
          type: array
        organization:
          description: Contains the name of a contributing organization being recognized.
          examples: [Cisco, ETH Zurich, IBM, Microsoft]
          minLength: 1
          title: Contributing organization
          type: string
        summary:
          description: SHOULD represent any contextual details the set producers wish
            to make known about the acknowledgment or acknowledged parties.
          examples: [First analysis of the merged data-set]
          minLength: 1
          title: Summary of the acknowledgment
          type: string
        urls:
          description: Specifies a list of URLs or location of the reference to be
            acknowledged.
          items: {description: Contains the URL or location of the reference to be
              acknowledged., format: uri, title: URL of acknowledgment, type: string}
          minItems: 1
          title: List of URLs
          type: array
      title: Acknowledgment
      type: object
    minItems: 1
    title: List of acknowledgments
    type: array
  language-type:
    description: 'Identifies a language, corresponding to IETF BCP 47 / RFC 5646.
      See IETF language registry: https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry'
    examples: [de, en, fr, frc, jp]
    pattern: ^(([A-Za-z]{2,3}(-[A-Za-z]{3}(-[A-Za-z]{3}){0,2})?|[A-Za-z]{4,8})(-[A-Za-z]{4})?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-[A-WY-Za-wy-z0-9](-[A-Za-z0-9]{2,8})+)*(-[Xx](-[A-Za-z0-9]{1,8})+)?|[Xx](-[A-Za-z0-9]{1,8})+|[Ii]-[Dd][Ee][Ff][Aa][Uu][Ll][Tt]|[Ii]-[Mm][Ii][Nn][Gg][Oo])$
    title: Language type
    type: string
  notes-type:
    description: Contains notes which are specific to the current context.
    items:
      description: Is a place to put all manner of text blobs related to the current
        context.
      properties:
        audience:
          description: Indicates who is intended to read it.
          examples: [all, executives, students, customers]
          minLength: 1
          title: Audience of note
          type: string
        category:
          description: Contains the information of what kind of note this is.
          enum: [description, details, faq, general, legal_disclaimer, other, summary]
          title: Note category
          type: string
        text: {description: Holds the content of the note. Content varies depending
            on type., minLength: 1, title: Note content, type: string}
        title:
          description: Provides a concise description of what is contained in the
            text of the note.
          examples: [Details, Executive summary, Findings of Internal Audit 2025-08-31,
            Technical summary]
          minLength: 1
          title: Title of note
          type: string
      required: [category, text]
      title: Note
      type: object
    minItems: 1
    title: List of notes
    type: array
  orga-type:
    $comment: We may want to reuse existing types for the orga or at least foir address
      data
    description: An organization responsible with point of contact for inquiries.
    items:
      properties:
        address:
          description: Single physical address as lines of text.
          items: {minLength: 1, type: string}
          minItems: 1
          type: array
          uniqueItems: true
        legal-name: {minLength: 1, type: string}
        url: {format: uri, type: string}
      required: [legal-name]
      type: object
    minItems: 1
    type: array
    uniqueItems: true
  provenance-type:
    description: This describes the provenance of the dataset.
    properties:
      date: {description: 'The date when the dataset was compiled or created, providing
          a temporal context for the data.', type: string}
      format:
        description: Describes the nature of the data within the dataset, such as
          numerical, textual, or multimedia, helping users understand what kind of
          information is contained within the file or dataset.
        items: {type: string}
        minItems: 0
        type: array
        uniqueItems: true
      generation-method:
        description: The methodology or procedures used to collect, generate, or compile
          the data, giving insight into its reliability and validity.
        items:
          properties:
            code: {type: string}
            description: {type: string}
            system: {type: string}
          required: [code]
          type: object
        minItems: 1
        type: array
        uniqueItems: true
      generation-period:
        description: The span of time during which the data within the dataset was
          collected or generated, offering insight into the dataset's timeliness and
          relevance.
        properties:
          end: {description: End date/time, type: string}
          start: {description: Start date/time, type: string}
        type: object
      origin:
        description: If the data originates from a different organization than the
          one who issued the dataset, this field identifies the original source's
          legal name.
        items:
          properties:
            address:
              items: {type: string}
              minItems: 0
              type: array
              uniqueItems: true
            name: {type: string}
          required: [name]
          type: object
        minItems: 0
        type: array
        uniqueItems: true
      origin-geography:
        description: The geographical location where the data was originally collected,
          which can be important for compliance with regional laws and understanding
          the data's context.
        items:
          properties:
            country: {type: string}
            state: {type: string}
          required: [country]
          type: object
        minItems: 1
        type: array
        uniqueItems: true
      previous-date: {description: 'The release date of the last version of the dataset,
          if it has been updated or revised, to track changes and updates over time.',
        type: string}
      source: {description: 'Identifies where the metadata for any source datasets
          that contribute to the current dataset can be found, establishing lineage
          and dependencies. This field establishes lineage.', type: string}
      sub-provenance: {$ref: '#/$defs/provenance-type'}
    required: [origin-geography, date, generation-method]
    type: object
  references-type:
    description: Holds a list of references.
    items:
      description: Holds any reference to conferences, papers, advisories, rulings,
        directives, and other resources that are related and considered related to
        either a surrounding part of or the entire information item and to be of value
        to the DP-COre set consumer.
      properties:
        category:
          default: external
          description: Indicates whether the reference points to the same information
            item in focus (depending on scope) or to an external resource.
          enum: [external, self]
          title: Category of reference
          type: string
        summary: {description: Indicates what this reference refers to., minLength: 1,
          title: Summary of the reference, type: string}
        url: {description: Provides the URL for the reference., format: uri, title: URL
            of reference, type: string}
      required: [summary, url]
      title: Reference
      type: object
    minItems: 1
    title: List of references
    type: array
  source-type:
    description: Characterizes the content and source of the dataset.
    properties:
      about:
        $ref: '#/$defs/about-type'
        description: Contains a detailed narrative that explains the contents, scope,
          and purpose of the dataset. It provides essential contextual information
          that helps users understand what the data represents, how it was collected,
          and any limitations or recommended uses.
        examples: {content: Estimates of table length from randomly selected participants,
          purpose: Publicly available test dataset for learning linear regression
            modeling.}
      data-version: {description: 'Specifies the version of the dataset this DP-Core
          set describes, allowing the dataset to evolve over time and keeping consistent
          labeling.', type: string}
      id:
        description: Unique identifier (such as a UUID) assigned to the dataset's
          metadata to uniquely distinguish it from others, ensuring no confusion or
          overlap.
        examples: [/public/ds/42, e5471657-9ede-4335-843b-c1376ef29bfa, 'https://example.com/public/ds/42']
        type: string
      issuer:
        $ref: '#/$defs/orga-type'
        description: The legal entity responsible for creating the dataset, providing
          accountability and a point of contact for inquiries.
        examples:
        - {legal-name: Sampling Ltd., url: 'https://example.com/smplng/about'}
      location: {description: 'The web address where the dataset''s metadata is published
          and can be accessed, providing a direct link to detailed information about
          the dataset. Typically will be a unique URL of the current dataset.', type: string}
      name: {description: 'The official name of the dataset, which should be descriptive
          and help easily identify the dataset''s content and purpose.', type: string}
    required: [about, id, issuer, location, name, data-version]
    type: object
  use-type:
    description: This group describes legal use and restrictions.
    properties:
      classification:
        description: Indicate if the dataset includes data falling into the confidentiality
          classification. Each classifier must be evaluated as true/false/unknown.
        items:
          properties:
            evaluated: {type: boolean}
            regulation:
              properties:
                code: {type: string}
                description: {type: string}
                system: {type: string}
              required: [code]
              type: object
            tool: {type: string}
          required: [regulation, evaluated]
          type: object
        minItems: 0
        type: array
        uniqueItems: true
      consents:
        description: Specifies where consent documentation or agreements related to
          the data can be found, ensuring legal compliance and regulatory use. This
          element must be populated when Privacy Consent is appropriate. When populated
          it points to either one Privacy Consent Policy that all individuals in the
          dataset agreed to, or one Privacy Policy for each individual in the dataset
          with that individual's signature.
        items: {type: string}
        minItems: 0
        type: array
        uniqueItems: true
      copyright:
        description: Indicates whether the dataset contains proprietary information
          that is covered with a Copyright and the terms of said Copyright.
        items: {type: string}
        minItems: 0
        type: array
        uniqueItems: true
      intended-purpose:
        description: Describes the purpose for which the dataset was created, guiding
          users on its intended use and potential applications against identified
          use cases. List all that apply from the Data Use codes that apply. Additional
          codes can be included with descriptions.
        items:
          properties:
            code: {type: string}
            description: {type: string}
            system: {type: string}
          required: [code, description]
          type: object
        minItems: 1
        type: array
        uniqueItems: true
      license:
        description: Details the location or point of contact for identifying the
          terms under which the dataset can be used, including any restrictions or
          obligations, clarifying legal use and distribution rights. License may be
          an End User License Agreement (EULA), subject to Data Use Agreement (DUA).
        items: {type: string}
        minItems: 0
        type: array
        uniqueItems: true
      patent:
        description: Indicates whether the dataset contains proprietary information
          that is covered with a Patent and said Patent number.
        items: {type: string}
        minItems: 0
        type: array
        uniqueItems: true
      privacy-enhancing:
        description: Indicates whether techniques were used to protect personally
          identifiable information (PII) or sensitive personal information (SPI),
          highlighting the dataset's privacy considerations.
        items:
          properties:
            parameters:
              items: {type: string}
              minItems: 0
              type: array
            result:
              items: {type: string}
              minItems: 0
              type: array
            tool-category:
              properties:
                code: {type: string}
                description: {type: string}
                system: {type: string}
              required: [code]
              type: object
            tool-used: {type: string}
          required: [tool-used]
          type: object
        minItems: 0
        type: array
        uniqueItems: true
      processing-excluded:
        description: Defines the geographical boundaries within which the data cannot
          be processed, often for legal or regulatory reasons.
        items:
          properties:
            country: {type: string}
            state: {type: string}
          required: [country]
          type: object
        minItems: 0
        type: array
        uniqueItems: true
      processing-included:
        description: Defines the geographical boundaries within which the data can
          be processed, often for legal or regulatory reasons.
        items:
          properties:
            country: {type: string}
            state: {type: string}
          required: [country]
          type: object
        minItems: 0
        type: array
        uniqueItems: true
      storage-allowed:
        description: Specifies where the data may be stored, crucial for compliance
          with data sovereignty laws.
        items:
          properties:
            country: {type: string}
            state: {type: string}
          required: [country]
          type: object
        minItems: 0
        type: array
        uniqueItems: true
      storage-forbidden:
        description: Specifies where the data may not be stored, crucial for compliance
          with data sovereignty laws.
        items:
          properties:
            country: {type: string}
            state: {type: string}
          required: [country]
          type: object
        minItems: 0
        type: array
        uniqueItems: true
      trademark:
        description: Indicates whether the dataset contains proprietary information
          that is covered with a Trademark, and the terms of said Trademark.
        items: {type: string}
        minItems: 0
        type: array
        uniqueItems: true
    required: [intended-purpose]
    type: object
  version-type:
    description: Specifies a version string to denote clearly the evolution of the
      content of the document. Format must be either integer or semantic versioning.
    examples: ['1', '4', 0.9.0, 1.4.3, 2.40.0+21AF26D3, 2025.7.31]
    pattern: ^(0|[1-9][0-9]*)$|^((0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)$
    title: Version
    type: string
$id: https://docs.oasis-open.org/dps/meta-1.0/schema/data-provenance.json
$schema: https://json-schema.org/draft/2020-12/schema
description: 'The Data Provenance metadata schema is made up of three groups of metadata
  elements: Source, Provenance, and Use.'
properties:
  provenance: {$ref: '#/$defs/provenance-type'}
  set:
    description: Captures the meta-data about this meta-data set describing a particular
      data-set.
    properties:
      acknowledgments: {$ref: '#/$defs/acknowledgments-type', description: Contains
          a list of acknowledgment elements associated with the whole set., title: Set
          acknowledgments}
      category:
        description: Defines a short canonical name, chosen by the set producer, which
          will inform the end user as to the category of the meta-data set.
        examples: [dp_base, dp_event_source, dp_profile_xyz, Example Data Protection
            Notice Exemption]
        minLength: 1
        pattern: ^[^\s\-_\.](.*[^\s\-_\.])?$
        title: Set category
        type: string
      language: {$ref: '#/$defs/language-type', description: 'Identifies the language
          used by this document, corresponding to IETF BCP 47 / RFC 5646.', title: Document
          language}
      schema-version:
        description: Gives the version of the Data Provenance Core specification which
          the document was generated for.
        enum: ['1.0']
        title: Data Provenance Core version
        type: string
      set-title:
        description: This SHOULD be a canonical name for the set, and sufficiently
          unique to distinguish it from similar sets.
        examples: [Learning Set for Regression Modelling for Stats 101, Example Data
            Protection Dataset in Example Generator]
        minLength: 1
        title: Title of this meta-data set
        type: string
      source-language: {$ref: '#/$defs/language-type', description: If this copy of
          the document is a translation then the value of this property describes
          from which language this document was translated., title: Source language}
      tracking:
        description: Is a container designated to hold all management attributes necessary
          to track a CSAF document as a whole.
        properties:
          aliases:
            description: Contains a list of alternate names for the same set.
            items:
              description: Specifies a non-empty string that represents a distinct
                optional alternative ID used to refer to the set.
              examples: [0bacba95-ceb9-4fae-bf07-d5683a9481c1]
              minLength: 1
              title: Alternate name
              type: string
            minItems: 1
            title: Aliases
            type: array
            uniqueItems: true
          current-release-date: {description: The date when the current revision of
              this document was released, format: date-time, title: Current release
              date, type: string}
          generator:
            description: Is a container to hold all elements related to the generation
              of the set. These items will reference when the document was actually
              created, including the date it was generated and the entity that generated
              it.
            properties:
              date: {description: 'This SHOULD be the current date that the set was
                  generated. Because documents are often generated internally by a
                  set producer and exist for a nonzero amount of time before being
                  released, this field MAY be different from the Initial Release Date
                  and Current Release Date.', format: date-time, title: Date of set
                  generation, type: string}
              engine:
                description: Contains information about the engine that generated
                  the DP-Core set.
                properties:
                  name:
                    description: Represents the name of the engine that generated
                      the DP-Core set.
                    examples: [Cisco Data Protector, DPCoreX, ExtractorDP]
                    minLength: 1
                    title: Engine name
                    type: string
                  version:
                    $ref: '#/$defs/version-type'
                    description: Contains the version of the engine that generated
                      the DP-Core set.
                    examples: [0.42.0, 1.0.0-beta+exp.sha.a1c44f85, '2']
                    title: Engine version
                required: [name]
                title: Engine of document generation
                type: object
            required: [engine]
            title: Set generator
            type: object
          id:
            description: The ID is a simple label that provides for a wide range of
              numbering values, types, and schemes. Its value SHOULD be assigned and
              maintained by the original set issuing authority.
            examples: [7aedeb0a-22dd-428a-ab76-c950b43cbbc6, abcdef-orga-ds-0815,
              cisco-sa-20190513-secureboot]
            minLength: 1
            pattern: ^[\S](.*[\S])?$
            title: Unique identifier for the set
            type: string
          initial-release-date: {description: The date when this set was first published.,
            format: date-time, title: Initial release date, type: string}
          revision-history:
            description: Holds one revision item for each version of the DP-Core set,
              including the initial one.
            items:
              description: Contains all the information elements required to track
                the evolution of a DP-Core set.
              properties:
                date: {description: The date of the revision entry, format: date-time,
                  title: Date of the revision, type: string}
                legacy-version: {description: 'Contains the version string used in
                    an existing set with the same content. This optional field is
                    intended to trace between DP-Core compliant to historic, DP-Core
                    unaware data provenance information items.', minLength: 1, title: Legacy
                    version of the revision, type: string}
                number: {$ref: '#/$defs/version-type'}
                summary:
                  description: Holds a single non-empty string representing a short
                    description of the changes.
                  examples: [Initial version.]
                  minLength: 1
                  title: Summary of the revision
                  type: string
              required: [date, number, summary]
              title: Revision
              type: object
            minItems: 1
            title: Revision history
            type: array
          status:
            description: Defines the draft status of the set. This allows processing
              DP-Core sets of various maturity per version.
            enum: [draft, final, interim]
            title: Set status
            type: string
          version: {$ref: '#/$defs/version-type', description: The version of the
              current DP-Core set, title: Set version}
        required: [current-release-date, id, initial-release-date, revision-history,
          status, version]
        title: Tracking
        type: object
    required: [category, schema-version, publisher, title, tracking]
    title: Set level meta-data
    type: object
  source: {$ref: '#/$defs/source-type'}
  use: {$ref: '#/$defs/use-type'}
required: [source, provenance, use]
title: Data Provenance Metadata Schema v1.0
type: object
