     package: "https://dataandtrustalliance.org/data-provenance-standard-1.0.0.schema/"
 description: "The Data Provenance Standard is made up of three groups of metadata elements: Source, Provenance, and Use."
       roots: ["Root"]
      config: {"$MaxString": 1000, "$FieldName": "^[$a-z][-_$A-Za-z0-9]{0,63}$"}
jadn_version: "http://oasis-open.org/openc2/jadn/v2.0/schema/"

Root = Record                                    // The Data Provenance Standard is made up of three groups of metadata elements: Source, Provenance, and Use.
   1 source           Root.source                // This describes a dataset and the source of the dataset.
   2 provenance       Root.provenance            // This describes the provenance of the dataset.
   3 use              Root.use                   // This group describes legal use and restrictions.

Root.source = Record                             // This describes a dataset and the source of the dataset.
   1 version          String                     // Specifies the version of the schema or standards used to define the metadata for this dataset, ensuring consistency and compatibility over time.
   2 title            String                     // The official name of the dataset, which should be descriptive and help easily identify the dataset's content and purpose.
   3 id               String                     // A distinct identifier (such as a UUID) assigned to the dataset's metadata to uniquely distinguish it from others, ensuring no confusion or overlap.
   4 location         String optional            // The web address where the dataset's metadata is published and can be accessed, providing a direct link to detailed information about the dataset. Typically will be a unique URL of the current dataset.
   5 issuer           Issuer                     // The legal entity responsible for creating the dataset, providing accountability and a point of contact for inquiries.
   6 description      String                     // Contains a detailed narrative that explains the contents, scope, and purpose of the dataset. It provides essential contextual information that helps users understand what the data represents, how it was collected, and any limitations or recommended uses.

Issuer = ArrayOf(Issuer-item){1..*}              // The legal entity responsible for creating the dataset, providing accountability and a point of contact for inquiries.

Issuer-item = Record
   1 name             String
   2 address          Address optional

Address = ArrayOf(String)

Root.provenance = Record                         // This describes the provenance of the dataset.
   1 source           String optional            // Identifies where the metadata for any source datasets that contribute to the current dataset can be found, establishing lineage and dependencies. This field establishes lineage.
   2 origin           Origin optional            // If the data originates from a different organization than the one who issued the dataset, this field identifies the original source's legal name.
   3 origin-geography Origin-geography           // The geographical location where the data was originally collected, which can be important for compliance with regional laws and understanding the data's context.
   4 date             String                     // The date when the dataset was compiled or created, providing a temporal context for the data.
   5 previous-date    String optional            // The release date of the last version of the dataset, if it has been updated or revised, to track changes and updates over time.
   6 generation-period Root.provenance.generation-period optional // The span of time during which the data within the dataset was collected or generated, offering insight into the dataset's timeliness and relevance.
   7 generation-method Generation-method         // The methodology or procedures used to collect, generate, or compile the data, giving insight into its reliability and validity.
   8 format           Format optional            // Describes the nature of the data within the dataset, such as numerical, textual, or multimedia, helping users understand what kind of information is contained within the file or dataset.
   9 sub-provenance   Root.provenance optional

Origin = ArrayOf(Origin-item)                    // If the data originates from a different organization than the one who issued the dataset, this field identifies the original source's legal name.

Origin-item = Record
   1 name             String
   2 address          Address optional

Origin-geography = ArrayOf(Origin-geography-item){1..*} // The geographical location where the data was originally collected, which can be important for compliance with regional laws and understanding the data's context.

Origin-geography-item = Record
   1 country          String
   2 state            String optional

Root.provenance.generation-period = Record       // The span of time during which the data within the dataset was collected or generated, offering insight into the dataset's timeliness and relevance.
   1 start            String optional            // Start date/time
   2 end              String optional            // End date/time

Generation-method = ArrayOf(Generation-method-item){1..*} // The methodology or procedures used to collect, generate, or compile the data, giving insight into its reliability and validity.

Generation-method-item = Record
   1 code             String
   2 system           String optional
   3 description      String optional

Format = ArrayOf(String)                         // Describes the nature of the data within the dataset, such as numerical, textual, or multimedia, helping users understand what kind of information is contained within the file or dataset.

Root.use = Record                                // This group describes legal use and restrictions.
   1 classification   Classification optional    // Indicate if the dataset includes data falling into the confidentiality classification. Each classifier must be evaluated as true/false/unknown.
   2 consents         Consents optional          // Specifies where consent documentation or agreements related to the data can be found, ensuring legal compliance and regulatory use. This element must be populated when Privacy Consent is appropriate. When populated it points to either one Privacy Consent Policy that all individuals in the dataset agreed to, or one Privacy Policy for each individual in the dataset with that individual's signature.
   3 privacy-enhancing Privacy-enhancing optional // Indicates whether techniques were used to protect personally identifiable information (PII) or sensitive personal information (SPI), highlighting the dataset's privacy considerations.
   4 processing-included Processing-included optional // Defines the geographical boundaries within which the data can be processed, often for legal or regulatory reasons.
   5 processing-excluded Processing-excluded optional // Defines the geographical boundaries within which the data cannot be processed, often for legal or regulatory reasons.
   6 storage-allowed  Storage-allowed optional   // Specifies where the data may be stored, crucial for compliance with data sovereignty laws.
   7 storage-forbidden Storage-forbidden optional // Specifies where the data may not be stored, crucial for compliance with data sovereignty laws.
   8 license          License optional           // Details the location or point of contact for identifying the terms under which the dataset can be used, including any restrictions or obligations, clarifying legal use and distribution rights. License may be an End User License Agreement (EULA), subject to Data Use Agreement (DUA).
   9 intended-purpose Intended-purpose           // Describes the purpose for which the dataset was created, guiding users on its intended use and potential applications against identified use cases. List all that apply from the Data Use codes that apply. Additional codes can be included with descriptions.
  10 copyright        Copyright optional         // Indicates whether the dataset contains proprietary information that is covered with a Copyright and the terms of said Copyright.
  11 patent           Patent optional            // Indicates whether the dataset contains proprietary information that is covered with a Patent and said Patent number.
  12 trademark        Trademark optional         // Indicates whether the dataset contains proprietary information that is covered with a Trademark, and the terms of said Trademark.

Classification = ArrayOf(Classification-item)    // Indicate if the dataset includes data falling into the confidentiality classification. Each classifier must be evaluated as true/false/unknown.

Classification-item = Record
   1 regulation       Classification-item.regulation
   2 evaluated        Boolean
   3 tool             String optional

Classification-item.regulation = Record
   1 code             String
   2 system           String optional
   3 description      String optional

Consents = ArrayOf(String)                       // Specifies where consent documentation or agreements related to the data can be found, ensuring legal compliance and regulatory use. This element must be populated when Privacy Consent is appropriate. When populated it points to either one Privacy Consent Policy that all individuals in the dataset agreed to, or one Privacy Policy for each individual in the dataset with that individual's signature.

Privacy-enhancing = ArrayOf(Privacy-enhancing-item) // Indicates whether techniques were used to protect personally identifiable information (PII) or sensitive personal information (SPI), highlighting the dataset's privacy considerations.

Privacy-enhancing-item = Record
   1 tool-category    Privacy-enhancing-item.tool-category optional
   2 tool-used        String optional
   3 parameters       Parameters optional
   4 result           Result optional

Privacy-enhancing-item.tool-category = Record
   1 code             String
   2 system           String optional
   3 description      String optional

Parameters = ArrayOf(String)

Result = ArrayOf(String)

Processing-included = ArrayOf(Processing-included-item) // Defines the geographical boundaries within which the data can be processed, often for legal or regulatory reasons.

Processing-included-item = Record
   1 country          String
   2 state            String optional

Processing-excluded = ArrayOf(Processing-excluded-item) // Defines the geographical boundaries within which the data cannot be processed, often for legal or regulatory reasons.

Processing-excluded-item = Record
   1 country          String
   2 state            String optional

Storage-allowed = ArrayOf(Storage-allowed-item)  // Specifies where the data may be stored, crucial for compliance with data sovereignty laws.

Storage-allowed-item = Record
   1 country          String
   2 state            String optional

Storage-forbidden = ArrayOf(Storage-forbidden-item) // Specifies where the data may not be stored, crucial for compliance with data sovereignty laws.

Storage-forbidden-item = Record
   1 country          String
   2 state            String optional

License = ArrayOf(String)                        // Details the location or point of contact for identifying the terms under which the dataset can be used, including any restrictions or obligations, clarifying legal use and distribution rights. License may be an End User License Agreement (EULA), subject to Data Use Agreement (DUA).

Intended-purpose = ArrayOf(Intended-purpose-item){1..*} // Describes the purpose for which the dataset was created, guiding users on its intended use and potential applications against identified use cases. List all that apply from the Data Use codes that apply. Additional codes can be included with descriptions.

Intended-purpose-item = Record
   1 code             String
   2 system           String optional
   3 description      String

Copyright = ArrayOf(String)                      // Indicates whether the dataset contains proprietary information that is covered with a Copyright and the terms of said Copyright.

Patent = ArrayOf(String)                         // Indicates whether the dataset contains proprietary information that is covered with a Patent and said Patent number.

Trademark = ArrayOf(String)                      // Indicates whether the dataset contains proprietary information that is covered with a Trademark, and the terms of said Trademark.
